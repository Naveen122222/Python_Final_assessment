# -*- coding: utf-8 -*-
"""LVADSUSR100_Naveen.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nQm0yqsdPCrUBm_-MD9RFs-YAJnE1qBW
"""



#1

import pandas as pd
data=pd.read_csv('/content/Walmart_Dataset Python_Final_Assessment.csv')
df=pd.DataFrame(data)
print(df.info())


print("Number of rows and columns in the given dataset:")
print("Rows:", df.shape[0])
print("Columns:", df.shape[1])
print("\n")

print("Types of Data:")
print(df.dtypes)
print("\n")

print(" Numerical Data:")
print(df.describe())
print("\n")

#2

print("Number of Missing Values in given data set:")
print(df.isna().sum())
# we don't have any missing values thats why we are doing any operations here

#3
print("ALL Numerical columns :")
print(df.describe())

#4
import matplotlib.pyplot as plt
import seaborn as sns
df.info()
plt.figure(figsize=(10,6))
plt.scatter(df['Product Name'],df['Sales'] )
plt.show()

plt.hist(df['Category'], bins=30, color='skyblue', edgecolor='black')

plt.xlabel('Values')
plt.ylabel('Frequency')
plt.title(' Histogram')
plt.show()

plt.figure(figsize=(10,4))
plt.boxplot(df['Sales'])
plt.show()

result=df.groupby(df['Category']).agg({"Category":'count'})

plt.pie(result['Category'],labels=result['Category'])
plt.legend()
plt.show()

df['Geography'].head()

#5

print("Correlation Between Different Columns is :")
correlation_matrix = df.corr()

plt.figure(figsize=(10, 8))
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt=".2f")
plt.title('Correlation Matrix')
plt.show()

df.info()

#6

import pandas as pd
import matplotlib.pyplot as plt




print(df.describe())


plt.figure(figsize=(10,6))
df.boxplot()
plt.title('Box plot of all columns')
plt.xticks(rotation=45)
plt.show()

plt.figure(figsize=(8, 6))
plt.scatter(df['Order Date'], df['Profit'])
plt.xlabel('Order Date')
plt.ylabel('Profit')
plt.title('Scatter plot of  vs Column 2')
plt.show()

plt.figure(figsize=(10,6))
plt.boxplot(df['Quantity'])
plt.title('Box plot')
plt.xticks(rotation=45)
plt.show()

df.info()

#7 Trend Analysis
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns


df['Order Date'] = pd.to_datetime(df['Order Date'])


df['Order Date'] = df['Order Date'].dt.year


yearly_data = df.groupby('Order Date').agg({'Sales': 'sum', 'Profit': 'sum'}).reset_index()


plt.figure(figsize=(10, 6))
sns.lineplot(data=yearly_data, x='Order Date', y='Sales', marker='o', label='Sales')
sns.lineplot(data=yearly_data, x='Order Date', y='Profit', marker='o', label='Profit')
plt.title('Sales and Profits Over the Year')
plt.xlabel('Year')
plt.ylabel('Amount')
plt.legend()
plt.grid(True)
plt.show()

#here we have to spend heavy amount to get low profit .

#7 Trend Analysis
import pandas as pd


df['Order Date'] = pd.to_datetime(df['Order Date'])
df['Order Date'] = df['Order Date'].dt.year

yearly_category_sales = df.groupby(['Order Date', 'Category'])['Sales'].sum().reset_index()
pivot_table = yearly_category_sales.pivot(index='Order Date', columns='Category', values='Sales')

growth_rate = pivot_table.pct_change(axis='rows') * 100

growth_overall = growth_rate.sum()
most_growing_category = growth_overall.idxmax()

print("Product category with the most growth in terms of sales over the years:", most_growing_category)

df.info()

#7 Customer Analysis
import pandas as pd




customer_summary = df.groupby('Order ID').agg({ 'Sales': 'sum'}).reset_index()
customer_summary.columns = [ 'Number_of_Orders', 'Total_Sales']

top_customers_by_orders = customer_summary.sort_values(by='Number_of_Orders', ascending=False).head(5)
top_customers_by_sales = customer_summary.sort_values(by='Total_Sales', ascending=False).head(5)

print("Top 5 Orders based on the number of orders placed:")
print(top_customers_by_orders)

print("\nTop 5 Orders based on total sales:")
print(top_customers_by_sales)


''' Analyze the buying behavior of top customers (e.g., frequency of purchases, average order value, product preferences)
    Check if there are any patterns or trends in their purchasing behavior
    Identify common characteristics among these top Orders
    Determine if there are any opportunities for upselling or cross-selling to these customers
'''

df.info()

#7 Customer Analysis
import pandas as pd


df['Order Date'] = pd.to_datetime(df['Order Date'])

# Group by customer ID and sort orders by order date
orders_data = df.sort_values(by=['Order Date'])

orders_data['Time_Between_Orders'] = orders_data.groupby('Order ID')['Order Date'].diff()


average_time_between_orders = orders_data.groupby('Order ID')['Time_Between_Orders'].mean().reset_index()
average_time_between_orders.columns = ['Order ID', 'Average_Time_Between_Orders']


print("Average time between orders :")
print(average_time_between_orders)

#7 comprehensive Analysis

'''
    #strategies implemented to optimize the supply chain based on insights to optimize supply chain.
#PROPER PLANNING need to be done
#SOURCING OF DATAfrom various platforms.
#PRODUCTION should be controlled based on need.
#DISTRIBUTION should be done accordingly.
#TRANSPORTATION must be done early based on the products.
'''

""" Factors such as Sales and Profits can impact geographic segmentation
and help businesses understand how these different factors may influence buying behavior.
Geographical segmentation is an important tool for businesses to understand their customer base,
 which helps them create targeted marketing campaigns."""

